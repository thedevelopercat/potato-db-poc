# more info on https://documentation.red-gate.com/fd/example-ci-cd-pipelines-138347137.html
name: 'PostgreSQL Flyway CI'

on:
  push:
    branches:
      - main
  workflow_dispatch:
      
env:
  SQLFLUFF_DIALECT: postgres
  DOCKER_IMAGE: redgate/flyway:11.1-alpine
  SCHEMAS: flyway
 
jobs:
  Continuous-Integration-Build:
    name: Continuous Integration Build
    environment: build
    runs-on: ubuntu-24.04
 
    steps:
      - name: Checkout
        uses: actions/checkout@v3.0.0
               
      - name: Continuous Integration Flyway Clean Migrate
        run: >-
          docker run --rm
          --volume ${{ github.workspace }}/sql:/flyway/sql:ro
          "${{ env.DOCKER_IMAGE }}"
          -licenseKey="${{ secrets.FLYWAY_LICENSE_KEY }}"
          -url="${{ secrets.DB_URL }}"
          -user="${{ secrets.DB_USERNAME }}"
          -password="${{ secrets.DB_PASSWORD }}"
          -placeholders.VegetablesUserName="${{ secrets.APP_USER_NAME }}"
          -cleanDisabled=false clean migrate -schemas="${{ env.SCHEMAS }}"

      - name: Flyway Info
        run: >-
          docker run --rm
          --volume ${{ github.workspace }}/sql:/flyway/sql:ro
          "${{ env.DOCKER_IMAGE }}"
          -licenseKey="${{ secrets.FLYWAY_LICENSE_KEY }}"
          -url="${{ secrets.DB_URL }}"
          -user="${{ secrets.DB_USERNAME }}"
          -password="${{ secrets.DB_PASSWORD }}" 
          -placeholders.VegetablesUserName="${{ secrets.APP_USER_NAME }}"
          info -schemas="${{ env.SCHEMAS }}"

      # Enterprise license required for Check
      # - name: Flyway Info Production
      #   run: >-
      #     docker run --rm
      #     --volume ${{ github.workspace }}/sql:/flyway/sql:ro
      #     "${{ env.DOCKER_IMAGE }}"
      #     -licenseKey="${{ secrets.FLYWAY_LICENSE_KEY }}"
      #     -url="${{ secrets.DB_URL }}"
      #     -user="${{ secrets.DB_USERNAME }}" 
      #     -password="${{ secrets.DB_PASSWORD }}"
      #     -placeholders.VegetablesUserName="${{ secrets.APP_USER_NAME }}"
      #     info -schemas="${{ env.SCHEMAS }}"
 
      # - name: Flyway Check
      #   run: >-
      #     docker run --rm \
      #       --volume ${{ github.workspace }}/sql:/flyway/sql:ro \
      #       --volume ${{ github.workspace }}/reports:/flyway/reports \
      #       -e ${{ secrets.FLYWAY_LICENSE_KEY }} \
      #       "${{ env.DOCKER_IMAGE }}" \
      #       -licenseKey="${{ secrets.FLYWAY_LICENSE_KEY }}" \
      #       -url="${{ secrets.DB_URL }}" \
      #       -user="${{ secrets.DB_USERNAME }}" \
      #       -password="${{ secrets.DB_PASSWORD }}" \
      #       -placeholders.VegetablesUserName="${{ secrets.APP_USER_NAME }}" \
      #       -baselineOnMigrate=true check -changes -drift -dryrun -schemas="${{ env.SCHEMAS }}" -outOfOrder=true -connectRetries=10 \
      #       -check.buildUrl="${{ secrets.DB_URL }}" \
      #       -check.buildUser="${{ secrets.DB_USERNAME }}" \
      #       -check.buildPassword="${{ secrets.DB_PASSWORD }}" \
      #       -reportFilename="/flyway/reports/report.html"
            
      - name: Upload report
        uses: actions/upload-artifact@v3
        with:
          name: Database Report
          path: reports/
 
        
  Deploy-Test:
    name: Deploy Test
    needs: Continuous-Integration-Build
    runs-on: ubuntu-24.04
    environment: test
    steps:
      - uses: actions/checkout@v3.0.0
      
      - run: >-    
          docker run --rm
          --volume ${{ github.workspace }}/sql:/flyway/sql:ro
          "${{ env.DOCKER_IMAGE }}"
          -licenseKey="${{ secrets.FLYWAY_LICENSE_KEY }}"
          -url="${{ secrets.DB_URL }}"
          -user="${{ secrets.DB_USERNAME }}"
          -password="${{ secrets.DB_PASSWORD }}"
          -placeholders.VegetablesUserName="${{ secrets.APP_USER_NAME }}"
          info -schemas="${{ env.SCHEMAS }}"
      - run: >-
          docker run --rm
          --volume ${{ github.workspace }}/sql:/flyway/sql:ro
          "${{ env.DOCKER_IMAGE }}"
          -licenseKey="${{ secrets.FLYWAY_LICENSE_KEY }}"
          -url="${{ secrets.DB_URL }}"
          -user="${{ secrets.DB_USERNAME }}"
          -password="${{ secrets.DB_PASSWORD }}"
          -placeholders.VegetablesUserName="${{ secrets.APP_USER_NAME }}"
          migrate -schemas="${{ env.SCHEMAS }}" -outOfOrder=true 
      - run: >-
          docker run --rm
          --volume ${{ github.workspace }}/sql:/flyway/sql:ro
          "${{ env.DOCKER_IMAGE }}"
          -licenseKey="${{ secrets.FLYWAY_LICENSE_KEY }}"
          -url="${{ secrets.DB_URL }}"
          -user="${{ secrets.DB_USERNAME }}"
          -password="${{ secrets.DB_PASSWORD }}"   
          -placeholders.VegetablesUserName="${{ secrets.APP_USER_NAME }}"
          info -schemas="${{ env.SCHEMAS }}"
 
  Deploy-Prod:
    name: Deploy Prod
    needs: Deploy-Test
    runs-on: ubuntu-24.04      
    environment: production
    steps:
      - name: Checkout
        uses: actions/checkout@v3.0.0
      
      # Enterprise license required for Check
      # - name: Flyway Check
      #   run: >-
      #     docker run --rm \
      #       --volume ${{ github.workspace }}/sql:/flyway/sql:ro \
      #       --volume ${{ github.workspace }}/reports:/flyway/reports \
      #       -e ${{ secrets.FLYWAY_LICENSE_KEY }} \
      #       "${{ env.DOCKER_IMAGE }}" \
      #       -licenseKey="${{ secrets.FLYWAY_LICENSE_KEY }}" \
      #       -url="${{ env.DB_URL }}" \
      #       -user="${{ env.DB_USERNAME }}" \
      #       -password="${{ env.DB_PASSWORD }}" \
      #       -placeholders.VegetablesUserName="${{ secrets.APP_USER_NAME }}" \
      #       -baselineOnMigrate=true check -changes -drift -dryrun -schemas=public -outOfOrder=true \
      #       -check.buildUrl="${{ secrets.DB_URL }}" \
      #       -check.buildUser="${{ secrets.DB_USERNAME }}" \
      #       -check.buildPassword="${{ secrets.DB_PASSWORD }}" \ 
      #       -reportFilename="/flyway/reports/report.html"
            
      # - name: Upload report
      #   uses: actions/upload-artifact@v3.0.0
      #   with:
      #     name: Database Report
      #     path: reports/
          
      - run: >-           
          docker run --rm
          --volume ${{ github.workspace }}/sql:/flyway/sql:ro
          "${{ env.DOCKER_IMAGE }}"
          -licenseKey="${{ secrets.FLYWAY_LICENSE_KEY }}" 
          -url="${{ secrets.DB_URL }}"
          -user="${{ secrets.DB_USERNAME }}"
          -password="${{ secrets.DB_PASSWORD }}"
          -placeholders.VegetablesUserName="${{ secrets.APP_USER_NAME }}"
          info -schemas="${{ env.SCHEMAS }}"
      - run: >-
          docker run --rm
          --volume ${{ github.workspace }}/sql:/flyway/sql:ro
          "${{ env.DOCKER_IMAGE }}"
          -licenseKey="${{ secrets.FLYWAY_LICENSE_KEY }}" 
          -url="${{ secrets.DB_URL }}"
          -user="${{ secrets.DB_USERNAME }}"
          -password="${{ secrets.DB_PASSWORD }}"
          -placeholders.VegetablesUserName="${{ secrets.APP_USER_NAME }}"
          migrate -schemas="${{ env.SCHEMAS }}" -outOfOrder=true
      - run: >-
          docker run --rm
          --volume ${{ github.workspace }}/sql:/flyway/sql:ro
          "${{ env.DOCKER_IMAGE }}"
          -licenseKey="${{ secrets.FLYWAY_LICENSE_KEY }}" 
          -url="${{ secrets.DB_URL }}"
          -user="${{ secrets.DB_USERNAME }}"
          -password="${{ secrets.DB_PASSWORD }}"
          -placeholders.VegetablesUserName="${{ secrets.APP_USER_NAME }}"
          info -schemas="${{ env.SCHEMAS }}"